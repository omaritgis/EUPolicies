package GUI;

import java.awt.EventQueue;
import javax.swing.JFrame;
import java.awt.Color;
import javax.imageio.ImageIO;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;
import javax.swing.JRadioButton;
import javax.swing.JLabel;

public class GUIWindow {

	private JFrame frame;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					GUIWindow window = new GUIWindow();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public GUIWindow() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	
	private String getAnswer(String typeOfPolicy) {
		String answer = "";
		switch (typeOfPolicy) {
		case "LargeTariff":
			answer = "Loss in consumer surplus \n Gain in producer surplus \n Government revenue generated by the tariff \n Terms of trade gain \n Net social welfare effect. \n\n Tariffs is a tax on an imported product that affects"
					+ " the consumer\n with a higher price. Resulting in a loss of\n profit for the exporting country. ";
			break;
		case "SmallTariff":
			answer = "Loss in consumer surplus \n Gain in producer surplus \n Government revenue generated by the tariff \n Social welfare loss.\n\n"
					+ "Tariffs is a tax on an imported product that affects the consumer\n with a higher price. Resulting in a loss of\nprofit for the exporting country.";
			break;
		case "WorldTariff":
			answer = "Loss in producer surplus foreign \n Gain in consumer surplus foreign \n Terms of trade gain home \n Social welfare loss home.\n\n"
					+ "Tariffs is a tax on an imported product that affects the consumer\n with a higher price. Resulting in a loss of\nprofit for the exporting country.";
			break;
		case "foreignImportingSocialWelfareEffects":
			answer = "Gain in consumer surplus \n Loss in producer surplus \n Social welfare gain.";
			break;
		case "importingSocialWelfareEffects":
			answer = "Loss in producer surplus foreign \n Gain in consumer surplus foreign \n Social welfare loss foreign";
			break;
		case "SmallImportSubsidy":
			answer = "Gain in consumer surplus \n Loss in producer surplus \n Government cost of subsidy \n Social welfare loss.\n\n"
					+ "Import subsidy is government support for \nimported products in order to let citizens\nhave access to the commodity.";
			break;
		case "LargeImportSubsidy": 
			answer = "Gain in consumer surplus \n Loss in producer surplus \n Government cost of subsidy \n Social welfare loss.\n\n"
					+ "Import subsidy is government support for \\nimported products in order to let citizens\\nhave access to the commodity.";
			break;
		case "WorldImportSubsidy": 
			answer = "Gain in producer surplus \n Loss in consumer surplus \n Social welfare gain.\n\n"
					+ "Import subsidy is government support for \\\\nimported products in order to let citizens\\\\nhave access to the commodity.";
			break;
		case "importQuotum":
			answer = "Loss in consumer surplus \n Gain in producer surplus \n Quota rent.\n\nImport quotum sets a limit\non the amount of import to the country\n that it will take.";
			break;
		case "SmallExportSubsidy":
			answer = "Gain in producer surplus \n Loss in consumer surplus \n Budget loss government by export subsidy \n Social welfare loss.\n\n"
					+ "Export subsidy is government support\nfor exporting products to assist the countrys balance\nof payments.";
			break;
		case "LargeExportSubsidy":
			answer = "Gain in producer surplus \n Loss in consumer surplus \n Budget loss government by export subsidy \n Social welfare loss.\n\n"
					+ "Export subsidy is government support\nfor exporting products to assist the countrys balance\nof payments";
			break;
		case "SmallExportTax":
			answer = "Loss in producer surplus \n Gain in consumer surplus \n Government revenue \n Social welfare loss.\n\n"
					+ "To safeguard domestic supplies rather than to raise revenue.";
			break;
		case "LargeExportTax":
			answer = "Loss in producer surplus \n Gain in consumer surplus \n Government revenue \n Terms of trade gain \n Efficiency loss.\n\n"
					+ "To safeguard domestic supplies rather than to raise revenue.";
			break;
		case "Levy":
			answer = "Raises the price of imports to a minimum \ndomestic price. The size of the levy depends on the world market \nprice. Export supply/world market price decreases but\ndomestic price increases."
					+ " Effects are the same as an import tariff but\nare more trade distorting since you remove all the price signals from\nthe external market towards the domestic market.";
			break;
		case "deficiencyPayment":
			answer = "Gain in producer surplus\nGovernment expenditures\nSocial Welfare loss.\nIs a government compensation to the farmers of a commodity for\nthe difference.";
			break;
		case "domesticQuota":
			answer = "Loss in consumer surplus \n Gain in producer surplus\n Loss in producer surplus\n Social welfare loss.\n\n"
					+ "Sets a limit of how much of a\nproduct that is allowed to be produced.\nAffects the production of a commodity.";
			break;
		}
		
		
		return answer;
	}
	
	private void initialize() {
		/*
		 * Tariff that increases or decreases based on the world market price. Effects are the same as an import tariff but are more trade distorting since you remove all the price signals from the external market towards the domestic
		 * importing market. 
		 * */
		frame = new JFrame();
		frame.setTitle("Totangy Trade&Welfare Wizard");
		frame.setBounds(100, 100, 1250, 700);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		ButtonGroup buttonGroup = new ButtonGroup();
		JRadioButton rdbtnSmall = new JRadioButton("Small");
		rdbtnSmall.setBounds(16, 422, 66, 23);
		buttonGroup.add(rdbtnSmall);
		frame.getContentPane().add(rdbtnSmall);
		
		JRadioButton rdbtnNewRadioButton = new JRadioButton("Large");
		rdbtnNewRadioButton.setBounds(111, 422, 66, 23);
		buttonGroup.add(rdbtnNewRadioButton);
		frame.getContentPane().add(rdbtnNewRadioButton);
		
		JRadioButton rdbtnWorld = new JRadioButton("World");
		rdbtnWorld.setBounds(199, 422, 68, 23);
		buttonGroup.add(rdbtnWorld);
		frame.getContentPane().add(rdbtnWorld);
		
		CustomJPanel graphPanel = new CustomJPanel();
		graphPanel.setBackground(Color.WHITE);
		graphPanel.setBounds(673, 20, 472, 295);
		frame.getContentPane().add(graphPanel);
		
		JTextArea textArea = new JTextArea();
		textArea.setEditable(false);
		textArea.setBounds(201, 20, 435, 295);
		frame.getContentPane().add(textArea);
		
		JButton btnImportTariff = new JButton("Import tariff");
		btnImportTariff.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(rdbtnSmall.isSelected()) {
					textArea.setText(getAnswer("SmallTariff"));
				}else if(rdbtnNewRadioButton.isSelected()) {
					textArea.setText(getAnswer("LargeTariff"));
				}else if(rdbtnWorld.isSelected()) {
					textArea.setText(getAnswer("WorldTariff"));
				}
				String path = "/Users/omartotangy/Desktop/Ugent/AgriculturalRuralLaw/Tariffs.png";
				try {
					graphPanel.setImage(ImageIO.read(new File(path)));
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}				
			}
		});
		btnImportTariff.setBounds(16, 20, 161, 29);
		frame.getContentPane().add(btnImportTariff);
		
		
		
		JButton btnQuota = new JButton("Quota");
		btnQuota.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				textArea.setText(getAnswer("importQuotum"));
				String path = "/Users/omartotangy/Desktop/Ugent/AgriculturalRuralLaw/quotum.png";
				try {
					graphPanel.setImage(ImageIO.read(new File(path)));
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		btnQuota.setBounds(16, 60, 161, 29);
		frame.getContentPane().add(btnQuota);
		
		JButton btnExportSubsidy = new JButton("Export Subsidy");
		btnExportSubsidy.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(rdbtnSmall.isSelected()) {
					textArea.setText(getAnswer("SmallExportSubsidy"));
				}else if(rdbtnNewRadioButton.isSelected()) {
					textArea.setText(getAnswer("LargeExportSubsidy"));
				}else if(rdbtnWorld.isSelected()) {
					textArea.setText(getAnswer("LargeExportSubsidy"));
				}
				String path = "/Users/omartotangy/Desktop/Ugent/AgriculturalRuralLaw/exportSubsidy.png";
				try {
					graphPanel.setImage(ImageIO.read(new File(path)));
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		btnExportSubsidy.setBounds(16, 101, 161, 29);
		frame.getContentPane().add(btnExportSubsidy);
		
		JButton btnExportTax = new JButton("Export Tax");
		btnExportTax.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(rdbtnSmall.isSelected()) {
					textArea.setText(getAnswer("SmallExportTax"));
				}else if(rdbtnNewRadioButton.isSelected()) {
					textArea.setText(getAnswer("LargeExportTax"));
				}else if(rdbtnWorld.isSelected()) {
					textArea.setText(getAnswer("LargeExportTax"));
				}
				String path = "/Users/omartotangy/Desktop/Ugent/AgriculturalRuralLaw/exportTax.png";
				try {
					graphPanel.setImage(ImageIO.read(new File(path)));
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		btnExportTax.setBounds(16, 142, 161, 29);
		frame.getContentPane().add(btnExportTax);
		
		JButton btnImportSubsidy = new JButton("Import Subsidy");
		btnImportSubsidy.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(rdbtnSmall.isSelected()) {
					textArea.setText(getAnswer("SmallImportSubsidy"));
				}else if(rdbtnNewRadioButton.isSelected()) {
					textArea.setText(getAnswer("LargeImportSubsidy"));
				}else if(rdbtnWorld.isSelected()) {
					textArea.setText(getAnswer("WorldImportSubsidy"));
				}
				String path = "/Users/omartotangy/Desktop/Ugent/AgriculturalRuralLaw/importSubsidy.png";
				try {
					graphPanel.setImage(ImageIO.read(new File(path)));
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		btnImportSubsidy.setBounds(16, 183, 161, 29);
		frame.getContentPane().add(btnImportSubsidy);
		
		JButton btnWelfareEffects = new JButton("Welfare effects");
		btnWelfareEffects.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(rdbtnSmall.isSelected()) {
					textArea.setText(getAnswer("foreignImportingSocialWelfareEffects"));
				}else if(rdbtnNewRadioButton.isSelected()) {
					textArea.setText(getAnswer("importingSocialWelfareEffects"));
				}else if(rdbtnWorld.isSelected()) {
					textArea.setText(getAnswer("importingSocialWelfareEffects"));
				}
			}
		});
		btnWelfareEffects.setBounds(16, 224, 161, 29);
		frame.getContentPane().add(btnWelfareEffects);
		
		JButton btnLevy = new JButton("Levy");
		btnLevy.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				textArea.setText(getAnswer("Levy"));
				String path = "/Users/omartotangy/Desktop/Ugent/AgriculturalRuralLaw/Levy.png";
				try {
					graphPanel.setImage(ImageIO.read(new File(path)));
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		btnLevy.setBounds(16, 257, 161, 29);
		frame.getContentPane().add(btnLevy);
		
		JButton btnDeficiencyPayment = new JButton("deficiency Payment");
		btnDeficiencyPayment.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				textArea.setText(getAnswer("deficiencyPayment"));
				String path = "/Users/omartotangy/Desktop/Ugent/AgriculturalRuralLaw/deficiencyPayment.png";
				try {
					graphPanel.setImage(ImageIO.read(new File(path)));
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		btnDeficiencyPayment.setBounds(16, 298, 161, 29);
		frame.getContentPane().add(btnDeficiencyPayment);
		
		JButton btnDomesticQuota = new JButton("Domestic quota");
		btnDomesticQuota.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				textArea.setText(getAnswer("domesticQuota"));
				String path = "/Users/omartotangy/Desktop/Ugent/AgriculturalRuralLaw/domesticQuota.png";
				try {
					graphPanel.setImage(ImageIO.read(new File(path)));
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});
		btnDomesticQuota.setBounds(16, 331, 161, 29);
		frame.getContentPane().add(btnDomesticQuota);
		
		JLabel lblDDemand = new JLabel("D = demand");
		lblDDemand.setBounds(673, 348, 88, 16);
		frame.getContentPane().add(lblDDemand);
		
		JLabel lblSupply = new JLabel("S = Supply");
		lblSupply.setBounds(673, 373, 88, 16);
		frame.getContentPane().add(lblSupply);
		
		JLabel lblMdImport = new JLabel("MD = Import demand function");
		lblMdImport.setBounds(673, 401, 203, 16);
		frame.getContentPane().add(lblMdImport);
		
		JLabel lblXs = new JLabel("XS = Export surplus function");
		lblXs.setBounds(673, 429, 203, 16);
		frame.getContentPane().add(lblXs);
		
		JLabel lblPPrice = new JLabel("P = Price");
		lblPPrice.setBounds(1057, 348, 88, 16);
		frame.getContentPane().add(lblPPrice);
		
		JLabel lblQQuantity = new JLabel("Q = Quantity");
		lblQQuantity.setBounds(1057, 373, 88, 16);
		frame.getContentPane().add(lblQQuantity);
		
		JButton btnTestknapp = new JButton("TestKnapp");
		btnTestknapp.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				lblDDemand.setText("LLL");
			}
		});
		btnTestknapp.setBounds(28, 471, 117, 29);
		frame.getContentPane().add(btnTestknapp);
		
		
	   }
}
